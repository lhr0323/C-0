#include<stdio.h> 
#include<stdlib.h>
#include<string.h>
#include<conio.h>
#define LEN sizeof(struct student)
#define AEN sizeof(struct studenth)
#define FORMAT "%-8d%-15s%-12.1lf%-12.1lf%-12.1lf%-11.1lf\n"
#define DATA stu[i].num,stu[i].name,stu[i].math,stu[i].english,stu[i].shujujiegou,stu[i].sum
#define BATA mtu[i].num,mtu[i].name,mtu[i].math,mtu[i].english,mtu[i].shujujiegou,mtu[i].sum
struct student//定义学生成绩结构体
{ 
	int num;//学号
	char name[15];//姓名
	double math;//数学课
	double english;//英语课
	double shujujiegou;//数据结构 
	double sum;//综合学分
};struct student stu[50],mtu[50],wtu[5];//定义结构体数组
struct studenth //定义学生信息结构体
{
	int numb;
	char name[15];
	char sex[6];
	int  age;
};struct studenth qtu[50];
void in();
void show();//显示学生信息
void del();//删除学生成绩信息
void modify();//修改学生成绩信息
void menu();//主菜单
void search();//查找学生信息
void total();//统计总人数
void ccs();//显示主菜单 
void cz();//各科最高分 
void suan();//总成绩排序 
void mathcj();//按照数学成绩排序 
void engcj();//英语成绩排序 
void shuju();//结构成绩排序
void cjcx();//成绩查询 
void bbc();
void xiugai();
void in2();
void show2();
void del2();
void search2();
void total2();
void xsxxxs();
void xxxx();
void in2()
{
int i,m=0;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("datam","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&qtu[m] ,AEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);
	if(m==0) 
		printf("No record!\n");
	else 
	{
		system("cls");
		show2();//调用show函数，显示原有信息
	}
	if((fp=fopen("datam","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
//	while(strcmp(ch,"Y")==0||strcmp(ch,"y")==0)//判断是否要录入新信息
do
	{
		printf("number:");
		scanf("%d",&qtu[m].numb);//输入学生学号
		for(i=0;i<m;i++)
			if(qtu[i].numb==qtu[m].numb)
			{
				printf("the number is existing,press any to continue!");
				getch();
				fclose(fp);
				return;
			}
			printf("姓名:");
			scanf("%s",qtu[m].name);
			printf("性别:");
			scanf("%s",&qtu[m].sex);
			printf("年龄:");
			scanf("%d",&qtu[m].age);
			if(fwrite(&qtu[m],AEN,1,fp)!=1)//将新录入的信息写入指定的磁盘文件
			{
				printf("can not save!"); 
				getch(); 
			}
			else
			{ 
				printf("%s saved!\n",qtu[m].name);
				m++;
			}
			printf("continue?(y/n):");//询问是否继续
			scanf("%s",ch);
	}
		while(strcmp(ch,"Y")==0||strcmp(ch,"y")==0);//判断是否要录入新信息
	fclose(fp);
	printf("OK!\n");		
}
void total2()
{
		FILE *fp;
	int m=0;
	if((fp=fopen("datam","ab+"))==NULL)
	{         
		printf("can not open\n");
		return;
	}
	while(!feof(fp))  
		if(fread(&qtu[m],AEN,1,fp)==1) 
			m++;/*统计记录个数即学生个数*/
		if(m==0)
		{
			printf("no record!\n");
			fclose(fp);
			return;
		}
		printf("the class are %d students!\n",m);/*将统计的个数输出*/
		fclose(fp);
}
void total()
{ 
	FILE *fp;
	int m=0;
	if((fp=fopen("data","ab+"))==NULL)
	{         
		printf("can not open\n");
		return;
	}
	while(!feof(fp))  
		if(fread(&stu[m],LEN,1,fp)==1) 
			m++;/*统计记录个数即学生个数*/
		if(m==0)
		{
			printf("no record!\n");
			fclose(fp);
			return;
		}
		printf("the class are %d students!\n",m);/*将统计的个数输出*/
		fclose(fp);
}
void xiugai2()
{
	FILE *fp;
	int i,j,m=0,qnum;
	if((fp=fopen("data","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp))  
		if(fread(&qtu[m],AEN,1,fp)==1) 
			m++;
		if(m==0)
		{
			printf("no record!\n");
			fclose(fp);
			return;
		}
		printf("请输入你想修改学生信息学生的学号!\n");
		scanf("%d",&qnum);
		for(i=0;i<m;i++)
			if(qnum==qtu[i].numb)//检索记录中是否有要修改的信息
				break;
			if(i<=m)
			{	
				printf("已经找到学生的信息，你可以进行修改!\n");
			printf("姓名:");
			scanf("%s",qtu[i].name);//输入学生姓名
			printf("性别:");
			scanf("%s",&qtu[i].sex);
			printf("年龄:");
			scanf("%d",&qtu[i].age);
            }
			else 
			{
				printf("can not find!");
				getchar();
				return;
			}
		if((fp=fopen("datam","wb"))==NULL)
			{
				printf("can not open\n");
				return;
			}
		        for(j=0;j<m;j++)//将新修改的信息写入指定的磁盘文件中//将新修改的信息写入指定的磁盘文件中
				if(fwrite(&qtu[j] ,AEN,1,fp)!=1)
				{ 
					printf("can not save!"); 
					getch(); 
				}
				fclose(fp);
}	
void xiugai()//修改学生信息 
{ 
	FILE *fp;
	int i,j,m=0,snum;
	if((fp=fopen("data","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp))  
		if(fread(&stu[m],LEN,1,fp)==1) 
			m++;
		if(m==0)
		{
			printf("no record!\n");
			fclose(fp);
			return;
		}
		printf("请输入你想修改学生信息学生的学号!\n");
		scanf("%d",&snum);
		for(i=0;i<m;i++)
			if(snum==stu[i].num)//检索记录中是否有要修改的信息
				break;
			if(i<=m)
			{	
				printf("已经找到学生的信息，你可以进行修改!\n");
			printf("姓名:");
			scanf("%s",stu[i].name);//输入学生姓名
			printf("数学:");
			scanf("%lf",&stu[i].math);//输入选修课成绩
			printf("英语:");
			scanf("%lf",&stu[i].english);//输入实验课成绩
			printf("数据结构:");
			scanf("%lf",&stu[i].shujujiegou);//输入必修课成绩
			stu[i].sum=stu[i].shujujiegou+stu[i].math+stu[i].english;
			}
			else 
			{
				printf("can not find!");
				getchar();
				return;
			}
		if((fp=fopen("data","wb"))==NULL)
			{
				printf("can not open\n");
				return;
			}
		        for(j=0;j<m;j++)//将新修改的信息写入指定的磁盘文件中//将新修改的信息写入指定的磁盘文件中
				if(fwrite(&stu[j] ,LEN,1,fp)!=1)
				{ 
					printf("can not save!"); 
					getch(); 
				}
				fclose(fp);
}
void bbc()
{
	system("cls");
	printf("\t\t\t------------------------------------------------|\n");
    printf("\t\t|-------------------------------------------------|\n");
    printf("\t\t|\t1.显示各科最高分                               |\n");
    printf("\t\t|\t2.总成绩排序                                   |\n");
    printf("\t\t|\t3.数学成绩排序                                 |\n");
    printf("\t\t|\t4.英语成绩排序                                 |\n");
    printf("\t\t|\t5.结构成绩排序                                 |\n");
    printf("\t\t|\t0.返回上一级菜单                               |\n");
    printf("\t\t|\t请输入菜单选项(0~5):                           |\n");
    printf("\t\t|-------------------------------------------------|\n");	
}
void cjcx()
{ 
	int n;
	bbc();
	scanf("%d",&n);//输入选择功能的编号
	while(n)
	{ 
		switch(n)
		{
		case 1: 
			cz();
			break;
		case 2: 
			suan();
			break;
		
        case 3: 
			mathcj();
			break;
		case 4:
			engcj();
			break;
        case 5: 
			shuju();	
			break;
		default:break;
		}
		getch();
		bbc();//执行完功能再次显示菜单界面
		scanf("%d",&n);
	}
}
void shuju()
{
int i,m=0,j;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("data","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&stu[m] ,LEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);	
	for(i=0;i<m;i++)
	{
		mtu[i]=stu[i];
	}
	for(i=1;i<m;i++)
	{
	wtu[0]=mtu[i];
	for(j=i;j>0&&mtu[j-1].shujujiegou>wtu[0].shujujiegou;j--)
		 mtu[j]=mtu[j-1];
		mtu[j]=wtu[0]; 	
	}
	 printf("                     数据结构成绩排序(插入排序)\n\n\n\n");
     printf("学号       姓名        数学       英语      数据结构       综合学分\t\n");
	for(i=0;i<m;i++)
	{ 

		printf(FORMAT,BATA);//将信息按指定格式打印
	}
 } 	
void engcj()
{
int i,m=0,j;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("data","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&stu[m] ,LEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);	
	for(i=0;i<m;i++)
	{
		mtu[i]=stu[i];
	}
	for(i=1;i<m;i++)
	{
	wtu[0]=mtu[i];
	for(j=i;j>0&&mtu[j-1].english>wtu[0].english;j--)
		 mtu[j]=mtu[j-1];
		mtu[j]=wtu[0]; 	
	}
	 printf("                       英语成绩排序(插入排序)\n\n\n\n");
     printf("学号       姓名        数学       英语      数据结构       综合学分\t\n");
	for(i=0;i<m;i++)
	{ 

		printf(FORMAT,BATA);//将信息按指定格式打印
	}
 } 
void mathcj()
{
int i,m=0,j;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("data","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&stu[m] ,LEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);	
	for(i=0;i<m;i++)
	{
		mtu[i]=stu[i];
	}
	for(i=1;i<m;i++)
	{
	wtu[0]=mtu[i];
	for(j=i;j>0&&mtu[j-1].math>wtu[0].math;j--)
		 mtu[j]=mtu[j-1];
		mtu[j]=wtu[0]; 	
	}
	 printf("                       数学成绩排序(插入排序)\n\n\n\n");
     printf("学号       姓名        数学       英语      数据结构       综合学分\t\n");
	for(i=0;i<m;i++)
	{ 

		printf(FORMAT,BATA);//将信息按指定格式打印
	}
}	
void suan()
{
int i,m=0,j;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("data","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&stu[m] ,LEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);	
	for(i=0;i<m;i++)
	{
		mtu[i]=stu[i];
	}
	for(i=1;i<m;i++)
	{
	wtu[0]=mtu[i];
	for(j=i;j>0&&mtu[j-1].sum>wtu[0].sum;j--)
		 mtu[j]=mtu[j-1];
		mtu[j]=wtu[0]; 	
	}
	 printf("                        总成绩排序(插入排序)\n\n\n\n");
     printf("学号       姓名        数学       英语      数据结构       综合学分\t\n");
	for(i=0;i<m;i++)
	{ 

		printf(FORMAT,BATA);//将信息按指定格式打印
	}
}
void cz()
{
		int i,m=0;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("data","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&stu[m] ,LEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);
	double maxmath,maxeng,maxshuju,maxsum;
	 int u=0,e=0,t=0,k=0,l=0;
	maxsum=stu[0].sum; 
    maxeng=stu[0].english;
    maxmath=stu[0].math;
    maxshuju=stu[0].shujujiegou;
		for(i=0;u<m;u++)
	{
		
	  if(maxeng<stu[u].english)
	       {
		   maxeng=stu[u].english;
		     e=i;
		}
	}
	printf("         英语最高分%.2f    姓名%s\n",maxeng,stu[e].name);
	for(u=0;u<m;u++)
	{
	
	  if(maxmath<stu[u].math)
	       {
		   maxmath=stu[u].math;
		    k=u;
	     }
	 }
	 printf("         数学最高分%.2f    姓名%s\n",maxmath,stu[k].name);
    for(u=0;u<m;u++)
    {
	
	  if(maxshuju<stu[u].shujujiegou)
	       {
		   maxshuju=stu[u].shujujiegou;
		   l=u;
	      }
	}
	printf("         数据最高分%.2f    姓名%s\n",maxshuju,stu[l].name);
	for(u=0;u<m;u++)
	{
			  			  
	  if(maxsum<stu[u].sum)
	       {
		   maxsum=stu[u].sum;
		     t=u;
		   }
	}
	printf("         全科最高分%.2f    姓名%s\n",maxsum,stu[t].name);
}
void ccs()
{
	 system("cls");
 printf("\n\n\n\n\n");
	printf("\t\t|                学生成绩管理系统                      |\n");
	printf("\t\t|------------------------------------------------------|\n");
	printf("\t\t|                红仁防伪水印                          |\n"); 
    printf("\t\t|------------------------------------------------------|\n");
    printf("\t\t|\t1.学生信息管理                                 |\n");
    printf("\t\t|\t2.学生成绩管理                                 |\n");
    printf("\t\t|\t3.成绩查询系统                                 |\n");
    printf("\t\t|\t4.退出系统                                     |\n");
    printf("\t\t|\t请输入菜单选项(1~4):                           |\n");
    printf("\t\t|------------------------------------------------------|\n");
}
void in()//录入学生信息
{ 
	int i,m=0;//m是记录的条数
	char ch[2];
	FILE *fp;//定义文件指针
	if((fp=fopen("data","ab+"))==NULL)//打开指定文件
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
	{ 
		if(fread(&stu[m] ,LEN,1,fp)==1)
			m++;//统计当前记录条数
	}
	fclose(fp);
	if(m==0) 
		printf("No record!\n");
	else 
	{
		system("cls");
		show();//调用show函数，显示原有信息
	}
	if((fp=fopen("data","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
//	while(strcmp(ch,"Y")==0||strcmp(ch,"y")==0)//判断是否要录入新信息
do
	{
		printf("number:");
		scanf("%d",&stu[m].num);//输入学生学号
		for(i=0;i<m;i++)
			if(stu[i].num==stu[m].num)
			{
				printf("the number is existing,press any to continue!");
				getch();
				fclose(fp);
				return;
			}
			printf("姓名:");
			scanf("%s",stu[m].name);//输入学生姓名
			printf("数学:");
			scanf("%lf",&stu[m].math);//输入选修课成绩
			printf("英语:");
			scanf("%lf",&stu[m].english);//输入实验课成绩
			printf("数据结构:");
			scanf("%lf",&stu[m].shujujiegou);//输入必修课成绩
			stu[m].sum=stu[m].math+stu[m].english+stu[m].shujujiegou;//计算出总成绩
			if(fwrite(&stu[m],LEN,1,fp)!=1)//将新录入的信息写入指定的磁盘文件
			{
				printf("can not save!"); 
				getch(); 
			}
			else
			{ 
				printf("%s saved!\n",stu[m].name);
				m++;
			}
			printf("continue?(y/n):");//询问是否继续
			scanf("%s",ch);
	}
		while(strcmp(ch,"Y")==0||strcmp(ch,"y")==0);//判断是否要录入新信息
	fclose(fp);
	printf("OK!\n");
}
void show()
{
	FILE *fp;
	int i,m=0;
	fp=fopen("data","ab+");
	while(!feof(fp))
	{
		if(fread(&stu[m] ,LEN,1,fp)==1) 
			m++;
	}  
	fclose(fp);
	printf("学号       姓名        数学       英语      数据结构       综合学分\t\n");
	for(i=0;i<m;i++)
	{ 
		printf(FORMAT,DATA);//将信息按指定格式打印
	}
}
void show2()
{
	FILE *fp;
	int i,m=0;
	fp=fopen("datam","ab+");
	while(!feof(fp))
	{
		if(fread(&qtu[m] ,AEN,1,fp)==1) 
			m++;
	}  
	fclose(fp);
	printf("学号       姓名        性别       年龄                \t\n");
	for(i=0;i<m;i++)
	{ 
    printf("%d          %s          %s         %3d        \n",qtu[i].numb,qtu[i].name,qtu[i].sex,qtu[i].age);//将信息按指定格式打印
	}	
}
void search2()
{
	FILE *fp;
	int qnum,i,m=0;
	char ch[2];
	if((fp=fopen("datam","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
		if(fread(&qtu[m],AEN,1,fp)==1) 
			m++;
		fclose(fp);
		if(m==0)
		{
			printf("no record!\n");
			return;
		}
		printf("请输入学生学号:");
		scanf("%d",&qnum);
		for(i=0;i<m;i++)
			if(qnum==qtu[i].numb)//查找输入的学号是否在记录中
			{ 
				printf("已经找到学生信息，是否显示?(y/n)");
				scanf("%s",ch);
				if(strcmp(ch,"Y")==0||strcmp(ch,"y")==0) 
				{
					printf("学号           姓名         性别        年龄                    \t\n");
			        printf("%d              %s          %s         %d        \n",qtu[i].numb,qtu[i].name,qtu[i].sex,qtu[i].age);///将查找出的结果按指定格式输出
					break;
				}
				else
					return;
			}   
			if(i==m) 
				printf("can not find the student!\n");//未找到要查找的信息	
 } 
void search()//自定义查找函数
{ 
	FILE *fp;
	int snum,i,m=0;
	char ch[2];
	if((fp=fopen("data","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp)) 
		if(fread(&stu[m],LEN,1,fp)==1) 
			m++;
		fclose(fp);
		if(m==0)
		{
			printf("no record!\n");
			return;
		}
		printf("请输入学生学号:");
		scanf("%d",&snum);
		for(i=0;i<m;i++)
			if(snum==stu[i].num)//查找输入的学号是否在记录中
			{ 
				printf("已经找到学生信息，是否显示?(y/n)");
				scanf("%s",ch);
				if(strcmp(ch,"Y")==0||strcmp(ch,"y")==0) 
				{
					printf("学号           姓名         数学        英语        数据结构       综合学分\t\n");
					printf(FORMAT,DATA);//将查找出的结果按指定格式输出
					break;
				}
				else
					return;
			}   
			if(i==m) 
				printf("can not find the student!\n");//未找到要查找的信息
}
void del2()
{
FILE *fp;
	int qnum,i,j,m=0;
	char ch[2];
	if((fp=fopen("datam","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp))  
		if(fread(&qtu[m],AEN,1,fp)==1) 
			m++;
		fclose(fp);
		if(m==0) 
		{
			printf("no record!\n");
			return;
		}
		printf("请输入学生学号:");
		scanf("%d",&qnum);
		for(i=0;i<m;i++)
			if(qnum==qtu[i].numb)
				break;
		 if(i==m)
			{
			printf("can not find");
			getchar();
			return;
			}
			printf("已经找到学生信息，是否删除?(y/n)");
			scanf("%s",ch);
			if(strcmp(ch,"Y")==0||strcmp(ch,"y")==0)//判断是否要进行删除
			{
				for(j=i;j<m;j++)
					qtu[j]=qtu[j+1];//将后一个记录移到前一个记录的位置
					m--;//记录的总个数减1
					printf("删除成功!\n");
				}
				if((fp=fopen("datam","wb"))==NULL)
				{ 
					printf("can not open\n");
					return;
				}
				for(j=0;j<m;j++)//将更改后的记录重新写入指定的磁盘文件中
					if(fwrite(&qtu[j] ,AEN,1,fp)!=1)
					{ 
						printf("can not save!\n");
						getch();
					}
					fclose(fp);
				
 } 
void del()/*自定义删除函数*/
{
	FILE *fp;
	int snum,i,j,m=0;
	char ch[2];
	if((fp=fopen("data","ab+"))==NULL)
	{ 
		printf("can not open\n");
		return;
	}
	while(!feof(fp))  
		if(fread(&stu[m],LEN,1,fp)==1) 
			m++;
		fclose(fp);
		if(m==0) 
		{
			printf("no record!\n");
			return;
		}
		printf("请输入学生学号:");
		scanf("%d",&snum);
		for(i=0;i<m;i++)
			if(snum==stu[i].num)
				break;
		 if(i==m)
			{
			printf("can not find");
			getchar();
			return;
			}
			printf("已经找到学生信息，是否删除?(y/n)");
			scanf("%s",ch);
			if(strcmp(ch,"Y")==0||strcmp(ch,"y")==0)//判断是否要进行删除
			{
				for(j=i;j<m;j++)
					stu[j]=stu[j+1];//将后一个记录移到前一个记录的位置
					m--;//记录的总个数减1
					printf("删除成功!\n");
				}
				if((fp=fopen("data","wb"))==NULL)
				{ 
					printf("can not open\n");
					return;
				}
				for(j=0;j<m;j++)//将更改后的记录重新写入指定的磁盘文件中
					if(fwrite(&stu[j] ,LEN,1,fp)!=1)
					{ 
						printf("can not save!\n");
						getch();
					}
					fclose(fp);
				
}
void xsxxxs()
{
	system("cls");
	printf("\n\n\n\n\n");
	printf("\t\t|------------------------------------------------|\n");
	printf("\t\t| 0. 退出                                        |\n");
	printf("\t\t| 1. 录入学生信息                           |\n");
	printf("\t\t| 2. 查询学生信息                           |\n");
	printf("\t\t| 3. 删除学生信息                           |\n");
	printf("\t\t| 4. 修改学生信息                           |\n");
    printf("\t\t| 5. 统计学生信息                           |\n");
    printf("\t\t| 6. 显示学生信息                           |\n");
	printf("\t\t|---------------------------------------------   |\n\n");
	printf("\t\t\t请选择(0-5):");	
}
void xscj() //自定义函数实现菜单功能
{
	system("cls");
	printf("\n\n\n\n\n");
	printf("\t\t|---------------------STUDENT-------------------|\n");
	printf("\t\t| 0. 退出                                       |\n");
	printf("\t\t| 1. 录入学生成绩信息                           |\n");
	printf("\t\t| 2. 查询学生成绩信息                           |\n");
	printf("\t\t| 3. 删除学生成绩信息                           |\n");
	printf("\t\t| 4. 修改学生成绩信息                           |\n");
    printf("\t\t| 5. 统计学生成绩信息                           |\n");
    printf("\t\t| 6. 显示学生成绩学生信息                       |\n");
	printf("\t\t|-----------------------------------------------|\n\n");
	printf("\t\t\t请选择(0-5):");
}
void xxxx()
{
	int n;
	xsxxxs();
	scanf("%d",&n);//输入选择功能的编号
	while(n)
	{ 
		switch(n)
		{
		case 1: 
			in2();
			break;
		case 2: 
			search2();
			break;
		
        case 3: 
			del2();
			break;
		case 4:
			xiugai2();
			break;
        case 5: 
			total2();
			break;
		case 6:
		    show2();
			break;	
		default:break;
		}
		getch();
		xsxxxs();//执行完功能再次显示菜单界面
		scanf("%d",&n);
	}	
 } 
void chengji()//成绩函数
{ 
	int n;
	xscj();
	scanf("%d",&n);//输入选择功能的编号
	while(n)
	{ 
		switch(n)
		{
		case 1: 
			in();
			break;
		case 2: 
			search();
			break;
		
        case 3: 
			del();
			break;
		case 4:
			xiugai();
			break;
        case 5: 
			total();
			break;
		case 6:
		    show();
			break;	
		default:break;
		}
		getch();
		xscj();//执行完功能再次显示菜单界面
		scanf("%d",&n);
	}
}


int main()//主函数
{
    int i;

    printf("\n\n\n\n\n");
	printf("\t\t|                     学生成绩管理系统                 |\n");
	printf("\t\t|------------------------------------------------------|\n");
	printf("\t\t|                     红仁防伪水印                     |\n");
    printf("\t\t|------------------------------------------------------|\n");
    printf("\t\t|\t1.学生信息管理                                 |\n");
    printf("\t\t|\t2.学生成绩管理                                 |\n");
    printf("\t\t|\t3.成绩查询系统                                 |\n");
    printf("\t\t|\t4.退出系统                                     |\n");
    printf("\t\t|\t请输入菜单选项(1~4):                           |\n");
    printf("\t\t|------------------------------------------------------|\n");
    
	while (scanf("%d",&i)==0)
{
printf("输入有误，重新输入 ");
scanf("%*s");

}
    if(i<1 || i>6)
    {
        printf("输入错误,请重输:\n");
       
    }
    while(i) 
{

	
    switch(i)
    {
    case 1:
        {
            system("cls");
            xxxx();
            break;
        }
    case 2:
        {
            system("cls");
             chengji();
            break;
        }


        
    case 3:
        {
            system("cls");
            cjcx();
            break;
        }
    case 5:
        {
            system("cls");
            suan();
            break;
        }
    case(4):
        {
            system("cls");
            printf("感谢使用本系统!\n\n再见!\n");
        }
     default:break;   
    }
    getch();
    ccs();
    scanf("%d",&i);
}
}
